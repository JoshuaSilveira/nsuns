{"version":3,"sources":["logo.svg","Cell.js","arrays.js","DayComponent.js","Stats.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Cell","props","Math","ceil","weight","toFixed","sets","reps","secondSet","secondReps","Day","secSetType","repsType","secondRepsType","setType","this","day","className","workout1","map","weightNum","i","weight1","workout2","weight2","React","Component","Stats","handleChange","event","parentCallback","type","value","currentBench","name","placeholder","onChange","currentSquat","currentDeadLift","currentOhp","App","callBack","target","setState","state","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.04dd0b82.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\r\n\r\n\r\nfunction Cell(props){\r\n    return(\r\n        <p>{Math.ceil((props.weight/5).toFixed(0)*5)}x{props.sets}</p>\r\n    );\r\n}\r\n\r\nexport default Cell","export const sets = [[0.65,0.75,0.85,0.85,0.85,0.80,0.75,0.70,0.65],\r\n                     [0.75,0.85,0.95,0.90,0.85,0.80,0.75,0.70,0.65],\r\n                     [0.75,0.75,0.75,0.75,0.75,0.75,0.75,0.75]]\r\n\r\nexport const reps = [[8,6,4,4,4,5,6,7,'8+'],\r\n                     [5,3,'1+',3,3,3,3,3,3],\r\n                     [5,3,'1+',3,3,3,5,5,5],\r\n                     [5,3,'1+',3,5,3,5,3,5],\r\n                     [3,3,3,3,3,3,3,3]]      \r\n                   \r\nexport const secondSet = [[0.50,0.60,0.70,0.70,0.70,0.70,0.70,0.70],\r\n                          [0.35,0.45,0.55,0.55,0.55,0.55,0.55,0.55],\r\n                          [0.40,0.50,0.60,0.60,0.60,0.60,0.60,0.60],\r\n                          [0.56,0.56,0.56,0.56,0.56]\r\n                        ]   \r\n\r\nexport const secondReps = [[6,5,3,5,7,4,6,8],\r\n                           [5,5,3,5,7,4,6,8],\r\n                           [3,3,3,3,3]]                        ","import React from 'react'\r\nimport Cell from './Cell'\r\nimport {sets} from './arrays'\r\nimport {reps} from './arrays'\r\nimport {secondSet} from './arrays'\r\nimport {secondReps} from './arrays'\r\nimport './style.css'\r\nclass Day extends React.Component{\r\n    \r\n\r\n    render(){\r\n       /**\r\n        * Logic for picking the apporpriate weight multipliers for the right excersizes \r\n        */ \r\n       const setType = this.props.day==1? sets[0]:(this.props.day==6? sets[2]:sets[1] )\r\n       \r\n       var secSetType;\r\n\r\n       switch(this.props.day){\r\n            case '1':\r\n               secSetType=secondSet[0];\r\n               break;\r\n            case '2':\r\n                secSetType=secondSet[1];\r\n                break;\r\n            case '4':\r\n                secSetType=secondSet[0];\r\n                break; \r\n            case '6':\r\n                secSetType=secondSet[3];\r\n                break;  \r\n            default:\r\n                secSetType=secondSet[2];\r\n                break;              \r\n       }\r\n       \r\n       \r\n       var repsType;\r\n        switch(this.props.day){\r\n            case '1':\r\n                repsType=reps[0];\r\n                break;\r\n            case '2':\r\n                repsType=reps[1];\r\n                break;\r\n            case '5':\r\n                repsType=reps[3];\r\n                break;    \r\n            case '6':\r\n                repsType=reps[4];\r\n                break;    \r\n            default:\r\n                repsType=reps[2];\r\n                break;       \r\n        }\r\n\r\n        var secondRepsType;\r\n\r\n        switch(this.props.day){\r\n            case '1':\r\n                secondRepsType=secondReps[0];\r\n                break;\r\n            case '2':\r\n                secondRepsType=secondReps[1];\r\n                break;\r\n            case '3':\r\n                secondRepsType=secondReps[0];\r\n                break;    \r\n            case '4':\r\n                secondRepsType=secondReps[1];\r\n                break;\r\n            case '5':\r\n                secondRepsType=secondReps[0];\r\n                break;    \r\n            default:\r\n                secondRepsType=secondReps[2];\r\n                break;                \r\n        }\r\n\r\n\r\n\r\n\r\n        return(\r\n            <div className='table'>            \r\n                <table >\r\n                    <tr className='tr'>\r\n                        <td className='td'>{this.props.workout1}</td>\r\n                        {setType.map((weightNum,i)=>\r\n                            <td className='td1'><Cell weight={weightNum*this.props.weight1} sets={repsType[i]}/></td>\r\n                        )}\r\n                    </tr>\r\n                    <tr className='tr'>\r\n                        <td className='td'>{this.props.workout2}</td>\r\n                        {secSetType.map((weightNum,i)=>\r\n                            <td className='td1'><Cell weight={weightNum*this.props.weight2} sets={secondRepsType[i]}/></td>\r\n                        )}\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Day","import React from 'react'\r\nimport './style.css'\r\nclass Stats extends React.Component{\r\n    \r\n    handleChange=(event)=>{\r\n        this.props.parentCallback(event);\r\n      }\r\n    \r\n    render(){\r\n        return(\r\n        <div className='stats'>\r\n            <ul className='list' >\r\n            <li>\r\n                <input className='navlist' type=\"text\"\r\n                    value={this.props.currentBench}\r\n                    name=\"currentBench\"\r\n                    placeholder=\"Enter Current Bench\"\r\n                    onChange={this.handleChange}\r\n                />\r\n                {' '}\r\n                Current Bench: {this.props.currentBench}\r\n            </li>\r\n            <li>\r\n                <input className='navlist' type=\"text\"\r\n                value={this.props.currentSquat}\r\n                name=\"currentSquat\"\r\n                placeholder=\"Enter Current Squat\"\r\n                onChange={this.handleChange}\r\n                />\r\n                \r\n                Current Squat: {this.props.currentSquat}\r\n            </li>\r\n            <li>\r\n                <input className='navlist' type=\"text\"\r\n                value={this.props.currentDeadLift}\r\n                name=\"currentDeadLift\"\r\n                placeholder=\"Enter Current deadlift\"\r\n                onChange={this.handleChange}\r\n                />\r\n                \r\n                Current deadlift: {this.props.currentDeadLift}\r\n            </li>\r\n            <li>\r\n                <input className='navlist' type=\"text\"\r\n                value={this.props.currentOhp}\r\n                name=\"currentOhp\"\r\n                placeholder=\"Enter Current OHP\"\r\n                onChange={this.handleChange}\r\n                />\r\n                {' '}\r\n                Current OHP: {this.props.currentOhp}\r\n            </li>\r\n            </ul>\r\n\r\n           \r\n        </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Stats","import React,{Component} from 'react';\nimport logo from './logo.svg';\nimport './style.css';\nimport Day from \"./DayComponent\"\nimport Stats from './Stats'\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state={\n      currentSquat: 0,\n      currentDeadLift:0,\n      currentBench:0,\n      currentOhp:0\n\n    }\n   // this.handleChange= this.handleChange.bind(this)\n  }\n /* if needed\n handleChange(event){\n    const{name,value} = event.target\n    this.setState({\n      [name]:value\n    })\n  }\n*/\n  callBack = (event) =>{\n    const{name,value} = event.target\n    this.setState({\n      [name]:value\n    })\n  }\n  render(){\n    return (\n      <div >\n      <Stats \n             currentBench = {this.state.currentBench}\n             currentDeadLift = {this.state.currentDeadLift}\n             currentSquat = {this.state.currentSquat}\n             currentOhp = {this.state.currentOhp}\n            parentCallback = {this.callBack}\n      />\n      <div className='main'>\n        \n        \n          <Day workout1=\"Bench\" weight1={this.state.currentBench} \n              workout2=\"OHP\" weight2={this.state.currentOhp}\n              day=\"1\"\n                />\n              \n          <Day workout1=\"DeadLift\" weight1={this.state.currentDeadLift} \n              workout2=\"Front Squat\" weight2={this.state.currentSquat}\n              day=\"2\"\n                /> \n              \n          <Day workout1=\"Overhead Press\" weight1={this.state.currentOhp} \n              workout2=\"Incline Bench\" weight2={this.state.currentBench}\n              day=\"3\"\n                /> \n                 \n          <Day workout1=\"Squat\" weight1={this.state.currentSquat} \n              workout2=\"Sum DeadLift\" weight2={this.state.currentDeadLift}\n              day=\"4\"\n                /> \n                   \n          <Day workout1=\"Bench\" weight1={this.state.currentBench} \n              workout2=\"Close Grip Bench\" weight2={this.state.currentBench}\n              day=\"5\"\n                />  \n                   \n          <Day workout1=\"DeadLift\" weight1={this.state.currentDeadLift} \n              workout2=\"Squat\" weight2={this.state.currentSquat}\n              day=\"6\"\n                /> \n        </div>                                    \n      </div>\n    )\n  }\n  \n    \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}